name: Build and test

on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  packages: write


# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          source-url: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
        
      - name: Restore packages
        run: dotnet restore
      
      - name: Build
        run: dotnet build
      
      - name: Test
        run: dotnet test
      
      - name: Pack for version
        if: startsWith(github.ref, 'refs/tags/v')
        run: dotnet pack -c Release -p:PackageVersion=${GITHUB_REF:11}

      - name: Pack without version
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        run: dotnet pack -c Release -p:PackageVersion=1.0.0.0

      - name: Upload windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: nuget
          path: ./BrainAI/bin/Release/BrainAI.*.nupkg


  godot:
    needs: build
    runs-on: ubuntu-latest
    name: Build godot artifacts
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          source-url: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Restore packages
        run: |
          dotnet restore "./BrainAI.Demo/BrainAI Demo.sln"

      - name: Export game
        id: export
        uses: firebelley/godot-export@v6.0.0
        with:
          godot_executable_download_url: https://github.com/godotengine/godot/releases/download/3.6-stable/Godot_v3.6-stable_mono_linux_headless_64.zip
          godot_export_templates_download_url: https://github.com/godotengine/godot/releases/download/3.6-stable/Godot_v3.6-stable_mono_export_templates.tpz
          relative_project_path: ./BrainAI.Demo/
          export_debug: false
          use_preset_export_path: true
          use_godot_3: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.export.outputs.build_directory }}/HTML5


  deploy_html5:
    needs: godot
    name: Deploy to github pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  pack:
    needs: build
    name: deploy
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: nuget
          path: ./artifacts

      - name: Setup nuget
        uses: nuget/setup-nuget@v2
        with:
          nuget-version: 'latest'

      - name: Setup nuget config
        run: nuget.exe sources add -name github -source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" -username ${{ github.actor }} -password ${{ secrets.GITHUB_TOKEN }}

      - name: Upload to GitHub Packages
        run: |
            for f in ./artifacts/*.nupkg
            do
              nuget push $f -Source "github"
            done
        shell: bash